define(["apps/AppManager","apps/todos/App","apps/todos/list/Controller","apps/common/View","apps/todos/list/View"],function(n,t,i,r,u){return describe("Todos",function(){return before(function(){return this.options={id:"todos",title:"Todos List"},$("<div id='fixture' style='display:none'>").appendTo("body")}),after(function(){return $("#fixture").remove()}),describe("App",function(){return it("creates an app",function(){return n.should.exist,t.should.exist})}),describe("Controller",function(){return before(function(){return this.changePage=sinon.stub(n,"changePage",function(){return Backbone.Events})}),after(function(){return this.changePage.restore()}),it("creates a controller",function(){return i.should.exist}),it("list todos when started",function(){return i.start(),n.trigger("todos:list"),this.changePage.should.have.been.calledOnce,this.changePage.should.have.been.calledWithMatch(this.options)})}),describe("Common View",function(){return before(function(){var n;return $("#fixture").append("<div id='PanelRegion' /><div id='HeaderRegion' /><div id='MainRegion' /><div id='FooterRegion' />").appendTo("body"),n=_.extend(this.options,{main:Marionette.ItemView.extend({render:function(){}})}),new r.Layout(n)}),after(function(){return $("#fixture").empty()}),it("displays the header",function(){return $("#fixture #HeaderRegion h1.ui-title").should.have.text(this.options.title)}),it("displays the content",function(){return $("#fixture #MainRegion #todos").should.exist})}),describe("View",function(){return before(function(){var t;return this.actionType=n.TodosApp.Constants.ActionType,$("#fixture").append("<div id='PanelRegion' /><div id='HeaderRegion' /><div id='MainRegion' /><div id='FooterRegion' />").appendTo("body"),t=Marionette.Region.extend({el:"#MainRegion"}),this.view=new u.Todos(_.extend(this.options,{region:new t})),this.react=React.addons.TestUtils,this.request=sinon.stub(n,"request",function(){var n;return n=$.Deferred(),setTimeout(function(){return n.resolve(new Backbone.Collection([{id:"1",title:"Todo 1",completed:!1},{id:"2",title:"Todo 2",completed:!0}]))}),n.promise()}),this.submitForm=function(n,t,i){var r,u;return r=$(React.findDOMNode(n)).find("input[type='text']"),this.react.Simulate.change(r[0],{target:{value:t}}),u=React.findDOMNode(n.refs.btnSubmit),$(u).click(),this.trigger.should.have.been.calledOnce,this.trigger.should.have.been.calledWithMatch(i,{title:t})}}),beforeEach(function(){return this.trigger=sinon.stub(this.view,"trigger")}),after(function(){return this.request.restore(),$("#fixture").empty()}),afterEach(function(){return this.trigger.restore()}),it("renders a page",function(){return this.view.render(),$.mobile.initializePage(),this.view.page.should.exist,this.view.el.should.exist,this.react.findRenderedComponentWithType(this.view.page,u.React.Todos).should.exist}),describe("Form",function(){return it("renders a form",function(){return this.form=this.react.findRenderedComponentWithType(this.view.page,u.React.TodosForm),this.form.should.exist}),it("creates a todo when submitted",function(){return this.submitForm(this.form,"Todo 1",this.actionType.CREATE)})}),describe("List",function(){return it("renders a list",function(){return this.list=this.react.findRenderedComponentWithType(this.view.page,u.React.TodosList),this.list.should.exist}),it("fetches todos collection",function(n){var t;return this.request.should.have.been.calledOnce,this.request.should.have.been.calledWithMatch("todo:entities"),t=this.list.$el,setTimeout(function(){return t.should.exist,t.children().should.have.length(2),n()},1)}),it("can edit a todo",function(n){return setTimeout($.proxy(function(){var t,i,r;return r=this.list.$el.children().first(),r.find("#btnEditTodo").click(),this.form=this.react.findRenderedComponentWithType(this.view.page,u.React.TodosForm),t=React.findDOMNode(this.form),i=$(t).find("input[type='text']"),i.should.have.value("Todo 1"),this.submitForm(this.form,"Todo 3",this.actionType.UPDATE),n()},this),1)}),it("can delete a todo",function(n){return setTimeout($.proxy(function(){var t;return t=this.list.$el.children().first(),t.find("#btnDeleteTodo").click(),this.trigger.should.have.been.calledOnce,this.trigger.should.have.been.calledWithMatch(this.actionType.DELETE),n()},this),1)})})})})})